Метод функциональных точек (Function Point Analysis) позволяет оценить размер программного продукта на основе количества функций, выполняемых системой. 
В данном случае, мы проанализируем 3 основных окна приложения интернет-магазина украшений и оценим их размер по двум категориям: разработка новой функции и доработка уже существующего функционала.

Для оценки размера по методу функциональных точек используются следующие элементы:
1. Ввод данных (ILF - Internal Logical File): это информационные объекты, с которыми пользователь взаимодействует. 
В случае интернет-магазина украшений, примерами вводимых данных могут быть информация о клиентах, информация о товарах, информация о заказах и т.д.
2. Вывод данных (EIF - External Interface File): это информационные объекты, которые используются системой, но поступают извне. 
Например, это может быть информация о поставщиках товаров, информация о платежных системах и т.д.
3. Внешние запросы (EQ - External Inquiry): это функции, которые предоставляют информацию пользователю или требуют от него ввода данных. 
В интернет-магазине украшений, примерами внешних запросов могут быть отображение списка товаров, поиск товаров по определенным критериям, оформление заказа и т.д.
4. Внешние операции (EO - External Output): это функции, которые создают или обновляют данные в информационных объектах. 
В случае интернет-магазина украшений, примерами внешних операций могут быть добавление нового товара, обновление информации о клиенте, изменение статуса заказа и т.д.

Теперь проанализируем 3 основных окна приложения и оценим их размер по двум категориям: разработка новой функции и доработка уже существующего функционала.

Пример оценки размера функциональных точек:
Окно 1: Отображение списка товаров
- Разработка новой функции:
  - Ввод данных (ILF): 1
  - Вывод данных (EIF): 1
  - Внешние запросы (EQ): 2
  - Внешние операции (EO): 0
  - Итого: 4 функциональных точки
- Доработка уже существующего функционала:
  - Ввод данных (ILF): 0
  - Вывод данных (EIF): 1
  - Внешние запросы (EQ): 1
  - Внешние операции (EO): 0
  - Итого: 2 функциональные точки
Окно 2: Поиск товаров по категориям
- Разработка новой функции:
  - Ввод данных (ILF): 1
  - Вывод данных (EIF): 1
  - Внешние запросы (EQ): 2
  - Внешние операции (EO): 0
  - Итого: 4 функциональных точки
- Доработка уже существующего функционала:
  - Ввод данных (ILF): 0
  - Вывод данных (EIF): 1
  - Внешние запросы (EQ): 1
  - Внешние операции (EO): 0
  - Итого: 2 функциональные точки
Окно 3: Оформление заказа
- Разработка новой функции:
  - Ввод данных (ILF): 2
  - Вывод данных (EIF): 1
  - Внешние запросы (EQ): 2
  - Внешние операции (EO): 2
  - Итого: 7 функциональных точек
- Доработка уже существующего функционала:
  - Ввод данных (ILF): 0
  - Вывод данных (EIF): 1
  - Внешние запросы (EQ): 1
  - Внешние операции (EO): 1
  - Итого: 3 функциональные точки

____

Из оценки размера функциональных точек для каждого из трех основных окон приложения интернет-магазина украшений можно сделать следующие выводы:

1. Окно отображения списка товаров:
- Разработка новой функции: 4 функциональных точки
- Доработка уже существующего функционала: 2 функциональные точки

2. Окно поиска товаров по категориям:
- Разработка новой функции: 4 функциональных точки
- Доработка уже существующего функционала: 2 функциональные точки

3. Окно оформления заказа:
- Разработка новой функции: 7 функциональных точек
- Доработка уже существующего функционала: 3 функциональные точки

Эти оценки размера функциональных точек предоставляют информацию о том, сколько функциональных элементов (ввод данных, вывод данных, внешние запросы, 
внешние операции) требуется для каждого окна приложения в разных сценариях: разработка новой функции и доработка уже существующего функционала.
Исходя из этих данных, можно сделать вывод о том, что окно оформления заказа является наиболее сложным и требует наибольшего количества функциональных точек. 
При разработке проекта интернет-магазина украшений необходимо обратить особое внимание на это окно и уделить достаточное количество ресурсов 
и внимания его разработке.
Также, важно учесть, что эта оценка размера функциональных точек основана на предоставленной информации и может быть подвержена изменениям 
в процессе разработки и доработки проекта.


Информационные объекты (ILF и EIF):

ILF (ввод данных): 3 объекта
EIF (вывод данных): 3 объекта
Элементарные операции:

EI (внешние запросы): 5 операций
EO (внешние операции): 3 операции
EQ (внешние запросы): 5 операций
Теперь сложим все полученные значения:

Общий объем продукта в не выровненных функциональных точках (UFP) = ILF + EIF + EI + EO + EQ
= 3 + 3 + 5 + 3 + 5 = 19 UFP

Таким образом, общий объем продукта в не выровненных функциональных точках для интернет-магазина украшений составляет 19 UFP. 
Это число используется в дальнейшем для расчета трудоемкости проекта, оценки затрат и планирования разработки.


Определение значения фактора выравнивания (FAV)
Помимо функциональных требований на продукт накладываются общесистемные требования, которые ограничивают разработчиков в выборе решения и увеличивают сложность разработки. Для учета этой сложности применяется фактор выравнивания (VAF). Значение фактора VAF зависит от 14 параметров, которые определяют системные характеристики продукта:
Обмен данными  3 (0 — продукт представляет собой автономное приложение; 5 — продукт обменивается данными по более, чем одному телекоммуникационному протоколу).
Распределенная обработка данных 4 (0 — продукт не перемещает данные; 5 — распределенная обработка данных выполняется несколькими компонентами системы).
Производительность 3 (0 — пользовательские требования по производительности не установлены; 5 — время отклика сильно ограничено критично для всех бизнес-операций, для удовлетворения требованиям необходимы специальные проектные решения и инструменты анализа.
Ограничения по аппаратным ресурсам 3 (0 — нет ограничений; 5 — продукт целиком должен функционировать на определенном процессоре и не может быть распределен).
Транзакционная нагрузка 2 (0 — транзакций не много, без пиков; 5 — число транзакций велико и неравномерно, требуются специальные решения и инструменты).
Интенсивность взаимодействия с пользователем 3  (0 — все транзакции обрабатываются в пакетном режиме; 5 — более 30% транзакций — интерактивные).
Эргономика 2 (эффективность работы конечных пользователей) (0 — нет специальных требований; 5 — требования по эффективности очень жесткие).
Интенсивность изменения данных (ILF) пользователями 2 (0 — не требуются; 5 — изменения интенсивные, жесткие требования по восстановлению).
Сложность обработки2  (0 — обработка минимальна; 5 — требования безопасности, логическая и математическая сложность, многопоточность).
Повторное использование 5 (0 — не требуется; 5 — продукт разрабатывается как стандартный многоразовый компонент).
Удобство инсталляции 3 (0 — нет требований; 5 — установка и обновление ПО производится автоматически).
Удобство администрирования 3 (0 — не требуется; 5 — система автоматически самовосстанавливается).
Портируемость 2 (0 — продукт имеет только 1 инсталляцию на единственном процессоре; 5 — система является распределенной и предполагает установку на различные «железо» и ОС).
Гибкость 3 (0 — не требуется; 5 — гибкая система запросов и построение произвольных отчетов, модель данных изменяется пользователем в интерактивном режиме).
Итог: 40

VAF = (TDI *0.01) + 0.65

VAF = (40 *0.01) + 0.65 = 1.05
